{
  "version": 4,
  "terraform_version": "1.1.7",
  "serial": 26,
  "lineage": "eb197e28-d6b9-0903-d230-24d0d9f529c0",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "google_client_config",
      "name": "provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token": "ya29.A0ARrdaM_ix8-EMSp0BQKHU3mwCradDdzdT1jtVE6r_t37Y4n99myFpT1B8lw4UBJ3WwKOFSr5UP_I9ARwynI7hDVkIP5EPySwLhSsMywpVyOk6EWhm5LDTTYbPLgaBbMfLQuhBeGMaIHxHsZ6Sjj6yKoFci-ytg",
            "id": "projects//regions//zones/",
            "project": "",
            "region": "",
            "zone": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "google_container_cluster",
      "name": "my_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ]
              }
            ],
            "authenticator_groups_config": [],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [],
                "enabled": false,
                "resource_limits": []
              }
            ],
            "cluster_ipv4_cidr": "10.0.0.0/14",
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "default_max_pods_per_node": 110,
            "description": "",
            "enable_binary_authorization": false,
            "enable_intranode_visibility": null,
            "enable_kubernetes_alpha": false,
            "enable_legacy_abac": false,
            "enable_shielded_nodes": false,
            "enable_tpu": null,
            "endpoint": "34.121.111.47",
            "id": "projects/gkedeployment-345319/locations/us-central1/clusters/gkedeployment-345319-gke",
            "initial_node_count": 1,
            "instance_group_urls": [
              "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-c/instanceGroups/gke-gkedeployment-345319-default-pool-dee220a4-grp",
              "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-a/instanceGroups/gke-gkedeployment-345319-default-pool-6d268ade-grp",
              "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-b/instanceGroups/gke-gkedeployment-345319-default-pool-e9837b76-grp"
            ],
            "ip_allocation_policy": [
              {
                "cluster_ipv4_cidr_block": "10.0.0.0/14",
                "cluster_secondary_range_name": "gke-gkedeployment-345319-gke-pods-b2ca8b15",
                "services_ipv4_cidr_block": "10.4.0.0/20",
                "services_secondary_range_name": "gke-gkedeployment-345319-gke-services-b2ca8b15"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "us-central1",
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRRnJXRGdZTWJQYkVZbnJhNjZhS0JtREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM05HUmpPV0UwWkMxaE1qVm1MVFF3TldVdFlUTTBPQzB4TnpBM09XVXlZekV5Tm1JdwpJQmNOTWpJd016STJNVGd5TXpBMVdoZ1BNakExTWpBek1UZ3hPVEl6TURWYU1DOHhMVEFyQmdOVkJBTVRKRGMwClpHTTVZVFJrTFdFeU5XWXROREExWlMxaE16UTRMVEUzTURjNVpUSmpNVEkyWWpDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQU5hNHRtMzNWV3VGVzFwbml5QzhnKzlCRk13WEFDQ0FzdE1IbUU2RgpYc05VR2tpNVZuWUZZc2dtT0VpM0ZNeW9OZDFlUHJZUzBPSHhpcUhTdFhEbkxsWTIycEw5M0VUSHIzSWROV0FFCktIYXdDQTh3VVFja0dQcmplNDNLTkIwVGpyUWtJWUt4T1A4SHg1b1hCWUpnMmxNb2RiWVoxTDVJZXBzclpuaEcKUEJzeXNtSkVUTmRkTVpOdVAveGovUFY2emkvNWlPTWplV1F5T2NRMUI2bHc3bFc0ZGt6WEYzeXBpUzNiZC9kZApzeW5IVFNjWjJCQm1JT1oyR2NOVUxSTU1mSWNSamoxUDRTUlNKZ3krTVEzWUpkbW1qemZTZlFRcEdGS3VEVHR5CmtPRUFHZkNIZ1BHTmg5WTNoTTVSRlE1ajlUa1RkeGtUUmR6dXRWYnRSMUd6dmJGcFBLbzNPWStnNHVtK3E0ZmEKZUxFc3ZnUEZJR0xGODNFak1jekliMEJzM24yQTZZQXVJUUJGRHk5aWtvSjZSYnJuS3VxdnJKK1RxVlJNeDFzQgo3amdwNElYM3Y2bHdpbXY0OGkyOGs5UDhqZEwyOStUb2F2SVFGc3BOK3RsRkVoU2NMK0RJMy8yRWlTd1Yybm02CnNreEVBRXRJbnVBb0U4cUNGREpjdXh1UlF3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVFMUpzMnB1NWQzWHlVaFhZZ0ZWZ2lwSHVtbjh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFGNDRibWdMZmFDdk1ZMms4TGd4MHpIanpoVmFTaUEzTmk5WDVFUUNnYVROCndJUzJIdHlFYTh2ZGliTzk1UzJDWDZsTXRralJ4bTkxNkhub3pVSWoyZENtbGQ1QVNycFgvMG5VOGJmQTVLSFMKMEcrWEFEOHF6dEltWUwvaGxQQnBndFk2bFh1U2hrRFl5U0h3VDlodU9Bcmx1anpnTml1YTBwME5QTUc3UFJNRgo1VWxFYkhhRHJEbUZMZit4ZzFTWkVjYklMc3FpcmRobVRsVHhNOWM3UnBoREE0b2wvMTNCayttVGpvMGdWRGloCm91MVZsbkN0cjFESjNCaHdXbm1tUndrRzJwUjZQaS9rL2I2VitLWnFTelFHbi9yOWZMQ1FKcDNlZWFWUkEzYnAKd3ZRdHZLYzM0aWRHaDBuR24xZHZNT3RXdmtuRFA1amtKbmtJWTB6cEpwYTB5ckNCeEl6Y0lhbmxabmRwTTQycQplNFQ3blVuTzdEU21FbVBQVmRHcSt5NndoaitsbDZMVGpIUHhVMVR6TjNRaVZMUElJR1FrbTJPUGlUVGJoVEVrCno0Q2hEWVkxMUhLcHQwbXhraHVzZFRudTBBVytWZEQ5bmdwUzQrOHcxZTJPS2NMOGROZkgyWDNLN0NFeHdaYUgKZUMrYzlXSllHTW1uQWlzUSttTXRpZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                "password": "",
                "username": ""
              }
            ],
            "master_authorized_networks_config": [],
            "master_version": "1.21.9-gke.1002",
            "min_master_version": null,
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "gkedeployment-345319-gke",
            "network": "projects/gkedeployment-345319/global/networks/gkedeployment-345319-todovpc",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "node_config": [
              {
                "disk_size_gb": 100,
                "disk_type": "pd-standard",
                "guest_accelerator": [],
                "image_type": "COS_CONTAINERD",
                "labels": {},
                "local_ssd_count": 0,
                "machine_type": "e2-medium",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/devstorage.read_only",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring",
                  "https://www.googleapis.com/auth/service.management.readonly",
                  "https://www.googleapis.com/auth/servicecontrol",
                  "https://www.googleapis.com/auth/trace.append"
                ],
                "preemptible": false,
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": false
                  }
                ],
                "tags": [],
                "taint": [],
                "workload_metadata_config": []
              }
            ],
            "node_locations": [
              "us-central1-a",
              "us-central1-b",
              "us-central1-c"
            ],
            "node_pool": [
              {
                "autoscaling": [],
                "initial_node_count": 1,
                "instance_group_urls": [
                  "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-c/instanceGroupManagers/gke-gkedeployment-345319-default-pool-dee220a4-grp",
                  "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-a/instanceGroupManagers/gke-gkedeployment-345319-default-pool-6d268ade-grp",
                  "https://www.googleapis.com/compute/v1/projects/gkedeployment-345319/zones/us-central1-b/instanceGroupManagers/gke-gkedeployment-345319-default-pool-e9837b76-grp"
                ],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 110,
                "name": "default-pool",
                "name_prefix": "",
                "node_config": [
                  {
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "guest_accelerator": [],
                    "image_type": "COS_CONTAINERD",
                    "labels": {},
                    "local_ssd_count": 0,
                    "machine_type": "e2-medium",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": false
                      }
                    ],
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": []
                  }
                ],
                "node_count": 1,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c"
                ],
                "upgrade_settings": [
                  {
                    "max_surge": 1,
                    "max_unavailable": 0
                  }
                ],
                "version": "1.21.9-gke.1002"
              }
            ],
            "node_version": "1.21.9-gke.1002",
            "operation": null,
            "pod_security_policy_config": null,
            "private_cluster_config": [],
            "project": "gkedeployment-345319",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": null,
            "resource_labels": {},
            "resource_usage_export_config": [],
            "self_link": "https://container.googleapis.com/v1beta1/projects/gkedeployment-345319/locations/us-central1/clusters/gkedeployment-345319-gke",
            "services_ipv4_cidr": "10.4.0.0/20",
            "subnetwork": "projects/gkedeployment-345319/regions/us-central1/subnetworks/gkedeployment-345319-todosubnet",
            "vertical_pod_autoscaling": [],
            "workload_identity_config": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "mongodb_replicaset_init",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "on-start.sh": "#!/usr/bin/env bash\n\n# Copyright 2018 The Kubernetes Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -e pipefail\n\nport=27017\nreplica_set=\"$REPLICA_SET\"\nscript_name=${0##*/}\nSECONDS=0\ntimeout=\"${TIMEOUT:-900}\"\n\nif [[ \"$AUTH\" == \"true\" ]]; then\n    admin_user=\"$ADMIN_USER\"\n    admin_password=\"$ADMIN_PASSWORD\"\n    admin_creds=(-u \"$admin_user\" -p \"$admin_password\")\n    if [[ \"$METRICS\" == \"true\" ]]; then\n        metrics_user=\"$METRICS_USER\"\n        metrics_password=\"$METRICS_PASSWORD\"\n    fi\n    auth_args=(\"--auth\" \"--keyFile=/data/configdb/key.txt\")\nfi\n\nlog() {\n    local msg=\"$1\"\n    local timestamp\n    timestamp=$(date --iso-8601=ns)\n    echo \"[$timestamp] [$script_name] $msg\" 2\u003e\u00261 | tee -a /work-dir/log.txt 1\u003e\u00262\n}\n\nretry_until() {\n    local host=\"${1}\"\n    local command=\"${2}\"\n    local expected=\"${3}\"\n    local creds=(\"${admin_creds[@]}\")\n\n    # Don't need credentials for admin user creation and pings that run on localhost\n    if [[ \"${host}\" =~ ^localhost ]]; then\n        creds=()\n    fi\n\n    until [[ $(mongo admin --host \"${host}\" \"${creds[@]}\" \"${ssl_args[@]}\" --quiet --eval \"${command}\") == \"${expected}\" ]]; do\n        sleep 1\n\n        if (! ps \"${pid}\" \u0026\u003e/dev/null); then\n            log \"mongod shutdown unexpectedly\"\n            exit 1\n        fi\n        if [[ \"${SECONDS}\" -ge \"${timeout}\" ]]; then\n            log \"Timed out after ${timeout}s attempting to bootstrap mongod\"\n            exit 1\n        fi\n\n        log \"Retrying ${command} on ${host}\"\n    done\n}\n\nshutdown_mongo() {\n    local host=\"${1:-localhost}\"\n    local args='force: true'\n    log \"Shutting down MongoDB ($args)...\"\n    if (! mongo admin --host \"${host}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --eval \"db.shutdownServer({$args})\"); then\n      log \"db.shutdownServer() failed, sending the terminate signal\"\n      kill -TERM \"${pid}\"\n    fi\n}\n\ninit_mongod_standalone() {\n    if [[ ! -f /init/initMongodStandalone.js ]]; then\n        log \"Skipping init mongod standalone script\"\n        return 0\n    elif [[ -z \"$(ls -1A /data/db)\" ]]; then\n        log \"mongod standalone script currently not supported on initial install\"\n        return 0\n    fi\n\n    local port=\"27018\"\n    log \"Starting a MongoDB instance as standalone...\"\n    mongod --config /data/configdb/mongod.conf --dbpath=/data/db \"${auth_args[@]}\" --port \"${port}\" --bind_ip=0.0.0.0 2\u003e\u00261 | tee -a /work-dir/log.txt 1\u003e\u00262 \u0026\n    export pid=$!\n    trap shutdown_mongo EXIT\n    log \"Waiting for MongoDB to be ready...\"\n    retry_until \"localhost:${port}\" \"db.adminCommand('ping').ok\" \"1\"\n    log \"Running init js script on standalone mongod\"\n    mongo admin --port \"${port}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" /init/initMongodStandalone.js\n    shutdown_mongo \"localhost:${port}\"\n}\n\nmy_hostname=$(hostname)\nlog \"Bootstrapping MongoDB replica set member: $my_hostname\"\n\nlog \"Reading standard input...\"\nwhile read -ra line; do\n    if [[ \"${line}\" == *\"${my_hostname}\"* ]]; then\n        service_name=\"$line\"\n    fi\n    peers=(\"${peers[@]}\" \"$line\")\ndone\n\n# Generate the ca cert\nca_crt=/data/configdb/tls.crt\nif [ -f \"$ca_crt\"  ]; then\n    log \"Generating certificate\"\n    ca_key=/data/configdb/tls.key\n    pem=/work-dir/mongo.pem\n    ssl_args=(--ssl --sslCAFile \"$ca_crt\" --sslPEMKeyFile \"$pem\")\n\n# Move into /work-dir\npushd /work-dir\n\ncat \u003eopenssl.cnf \u003c\u003cEOL\n[req]\nreq_extensions = v3_req\ndistinguished_name = req_distinguished_name\n[req_distinguished_name]\n[ v3_req ]\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = $(echo -n \"$my_hostname\" | sed s/-[0-9]*$//)\nDNS.2 = $my_hostname\nDNS.3 = $service_name\nDNS.4 = localhost\nDNS.5 = 127.0.0.1\nEOL\n\n    # Generate the certs\n    openssl genrsa -out mongo.key 2048\n    openssl req -new -key mongo.key -out mongo.csr -subj \"/OU=MongoDB/CN=$my_hostname\" -config openssl.cnf\n    openssl x509 -req -in mongo.csr \\\n        -CA \"$ca_crt\" -CAkey \"$ca_key\" -CAcreateserial \\\n        -out mongo.crt -days 3650 -extensions v3_req -extfile openssl.cnf\n\n    rm mongo.csr\n    cat mongo.crt mongo.key \u003e $pem\n    rm mongo.key mongo.crt\nfi\n\ninit_mongod_standalone\n\nlog \"Peers: ${peers[*]}\"\nlog \"Starting a MongoDB replica\"\nmongod --config /data/configdb/mongod.conf --dbpath=/data/db --replSet=\"$replica_set\" --port=\"${port}\" \"${auth_args[@]}\" --bind_ip=0.0.0.0 2\u003e\u00261 | tee -a /work-dir/log.txt 1\u003e\u00262 \u0026\npid=$!\ntrap shutdown_mongo EXIT\n\nlog \"Waiting for MongoDB to be ready...\"\nretry_until \"localhost\" \"db.adminCommand('ping').ok\" \"1\"\nlog \"Initialized.\"\n\n# try to find a master\nfor peer in \"${peers[@]}\"; do\n    log \"Checking if ${peer} is primary\"\n    # Check rs.status() first since it could be in primary catch up mode which db.isMaster() doesn't show\n    if [[ $(mongo admin --host \"${peer}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --quiet --eval \"rs.status().myState\") == \"1\" ]]; then\n        retry_until \"${peer}\" \"db.isMaster().ismaster\" \"true\"\n        log \"Found primary: ${peer}\"\n        primary=\"${peer}\"\n        break\n    fi\ndone\n\nif [[ \"${primary}\" = \"${service_name}\" ]]; then\n    log \"This replica is already PRIMARY\"\nelif [[ -n \"${primary}\" ]]; then\n    if [[ $(mongo admin --host \"${primary}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --quiet --eval \"rs.conf().members.findIndex(m =\u003e m.host == '${service_name}:${port}')\") == \"-1\" ]]; then\n      log \"Adding myself (${service_name}) to replica set...\"\n      if (mongo admin --host \"${primary}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --eval \"rs.add('${service_name}')\" | grep 'Quorum check failed'); then\n          log 'Quorum check failed, unable to join replicaset. Exiting prematurely.'\n          exit 1\n      fi\n    fi\n\n    sleep 3\n    log 'Waiting for replica to reach SECONDARY state...'\n    retry_until \"${service_name}\" \"rs.status().myState\" \"2\"\n    log '✓ Replica reached SECONDARY state.'\n\nelif (mongo \"${ssl_args[@]}\" --eval \"rs.status()\" | grep \"no replset config has been received\"); then\n    log \"Initiating a new replica set with myself ($service_name)...\"\n    mongo \"${ssl_args[@]}\" --eval \"rs.initiate({'_id': '$replica_set', 'members': [{'_id': 0, 'host': '$service_name'}]})\"\n\n    sleep 3\n    log 'Waiting for replica to reach PRIMARY state...'\n    retry_until \"localhost\" \"db.isMaster().ismaster\" \"true\"\n    primary=\"${service_name}\"\n    log '✓ Replica reached PRIMARY state.'\n\n    if [[ \"${AUTH}\" == \"true\" ]]; then\n        log \"Creating admin user...\"\n        mongo admin \"${ssl_args[@]}\" --eval \"db.createUser({user: '${admin_user}', pwd: '${admin_password}', roles: [{role: 'root', db: 'admin'}]})\"\n    fi\nfi\n\n# User creation\nif [[ -n \"${primary}\" \u0026\u0026 \"$AUTH\" == \"true\" \u0026\u0026 \"$METRICS\" == \"true\" ]]; then\n    metric_user_count=$(mongo admin --host \"${primary}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --eval \"db.system.users.find({user: '${metrics_user}'}).count()\" --quiet)\n    if [[ \"${metric_user_count}\" == \"0\" ]]; then\n        log \"Creating clusterMonitor user...\"\n        mongo admin --host \"${primary}\" \"${admin_creds[@]}\" \"${ssl_args[@]}\" --eval \"db.createUser({user: '${metrics_user}', pwd: '${metrics_password}', roles: [{role: 'clusterMonitor', db: 'admin'}, {role: 'read', db: 'local'}]})\"\n    fi\nfi\n\nlog \"MongoDB bootstrap complete\"\nexit 0\n"
            },
            "id": "test/todomongodb-mongodb-replicaset-init",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "mongodb-replicaset",
                  "release": "todomongodb"
                },
                "name": "todomongodb-mongodb-replicaset-init",
                "namespace": "test",
                "resource_version": "12366",
                "uid": "9d8b92fc-bcbe-4a46-85ec-44359da4b1e1"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.google_client_config.provider",
            "data.google_container_cluster.my_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "mongodb_replicaset_mongodb",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "mongod.conf": "{}\n"
            },
            "id": "test/todomongodb-mongodb-replicaset-mongodb",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "mongodb-replicaset",
                  "release": "todomongodb"
                },
                "name": "todomongodb-mongodb-replicaset-mongodb",
                "namespace": "test",
                "resource_version": "12361",
                "uid": "64e0faca-efb3-4966-9b15-0d3676704a13"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.google_client_config.provider",
            "data.google_container_cluster.my_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "test",
            "metadata": [
              {
                "annotations": {
                  "name": "test-annotation"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "mylabel": "test-label"
                },
                "name": "test",
                "resource_version": "11976",
                "uid": "0ccafd8a-6370-4008-926a-3106ca40e35d"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.google_client_config.provider",
            "data.google_container_cluster.my_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "mongodb_replicaset",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "test/todomongodb-mongodb-replicaset",
            "metadata": [
              {
                "annotations": {
                  "cloud.google.com/neg": "{\"ingress\":true}",
                  "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "mongodb-replicaset",
                  "release": "todomongodb"
                },
                "name": "todomongodb-mongodb-replicaset",
                "namespace": "test",
                "resource_version": "12378",
                "uid": "1c63fe68-a869-4189-9c7b-b8e9ff2b401f"
              }
            ],
            "spec": [
              {
                "cluster_ip": "None",
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "name": "mongodb",
                    "node_port": 0,
                    "port": 27017,
                    "protocol": "TCP",
                    "target_port": "27017"
                  }
                ],
                "publish_not_ready_addresses": true,
                "selector": {
                  "app": "mongodb-replicaset",
                  "release": "todomongodb"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.google_client_config.provider",
            "data.google_container_cluster.my_cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_stateful_set",
      "name": "mongodb_replicaset",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "test/todomongodb-mongodb-replicaset",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "mongodb-replicaset",
                  "release": "todomongodb"
                },
                "name": "todomongodb-mongodb-replicaset",
                "namespace": "test",
                "resource_version": "12703",
                "uid": "98a7302c-f6af-4727-a9e0-484cacb548f4"
              }
            ],
            "spec": [
              {
                "pod_management_policy": "OrderedReady",
                "replicas": "1",
                "revision_history_limit": 0,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "mongodb-replicaset",
                      "release": "todomongodb"
                    }
                  }
                ],
                "service_name": "todomongodb-mongodb-replicaset",
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "checksum/config": "d2443db7eccf79039fa12519adbce04b24232c89bff87ff7dada29bd0fdd3f48"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "mongodb-replicaset",
                          "release": "todomongodb"
                        },
                        "name": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "--config=/data/configdb/mongod.conf",
                              "--dbpath=/data/db",
                              "--replSet=rs0",
                              "--port=27017",
                              "--bind_ip=0.0.0.0"
                            ],
                            "command": [
                              "mongod"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "mongo:bionic",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "mongo",
                                      "--eval",
                                      "db.adminCommand('ping')"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "http_get": [],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "mongodb-replicaset",
                            "port": [
                              {
                                "container_port": 27017,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "mongodb",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [
                                  {
                                    "command": [
                                      "mongo",
                                      "--eval",
                                      "db.adminCommand('ping')"
                                    ]
                                  }
                                ],
                                "failure_threshold": 3,
                                "http_get": [],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "1",
                                  "memory": "2Gi"
                                },
                                "requests": {
                                  "cpu": "250m",
                                  "memory": "1Gi"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/data/db",
                                "mount_propagation": "None",
                                "name": "datadir",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/data/configdb",
                                "mount_propagation": "None",
                                "name": "configdir",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/work-dir",
                                "mount_propagation": "None",
                                "name": "workdir",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [
                          {
                            "args": [
                              "-c",
                              "set -e\nset -x\n\ncp /configdb-readonly/mongod.conf /data/configdb/mongod.conf\n"
                            ],
                            "command": [
                              "sh"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "busybox:1.29.3",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "copy-config",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": null,
                                "requests": null
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/work-dir",
                                "mount_propagation": "None",
                                "name": "workdir",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/configdb-readonly",
                                "mount_propagation": "None",
                                "name": "config",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/data/configdb",
                                "mount_propagation": "None",
                                "name": "configdir",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [
                              "--work-dir=/work-dir"
                            ],
                            "command": null,
                            "env": [],
                            "env_from": [],
                            "image": "unguiculus/mongodb-install:0.7",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "install",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": null,
                                "requests": null
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/work-dir",
                                "mount_propagation": "None",
                                "name": "workdir",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          },
                          {
                            "args": [
                              "-on-start=/init/on-start.sh",
                              "-service=$(POD_NAME)-mongodb-replicaset"
                            ],
                            "command": [
                              "/work-dir/peer-finder"
                            ],
                            "env": [
                              {
                                "name": "POD_NAME",
                                "value": "todomongodb",
                                "value_from": []
                              },
                              {
                                "name": "POD_NAMESPACE",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "REPLICA_SET",
                                "value": "rs0",
                                "value_from": []
                              },
                              {
                                "name": "TIMEOUT",
                                "value": "900",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "mongo:bionic",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "bootstrap",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": null,
                                "requests": null
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/work-dir",
                                "mount_propagation": "None",
                                "name": "workdir",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/init",
                                "mount_propagation": "None",
                                "name": "init",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/data/configdb",
                                "mount_propagation": "None",
                                "name": "configdir",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/data/db",
                                "mount_propagation": "None",
                                "name": "datadir",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "node_name": "",
                        "node_selector": null,
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [
                          {
                            "fs_group": "999",
                            "run_as_group": "",
                            "run_as_non_root": true,
                            "run_as_user": "999",
                            "se_linux_options": [],
                            "seccomp_profile": [],
                            "supplemental_groups": null,
                            "sysctl": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "todomongodb-mongodb-replicaset-mongodb",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0755",
                                "items": [],
                                "name": "todomongodb-mongodb-replicaset-init",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "init",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "workdir",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "configdir",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ],
                "update_strategy": [],
                "volume_claim_template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": null,
                        "name": "datadir",
                        "namespace": "default",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "access_modes": [
                          "ReadWriteOnce"
                        ],
                        "resources": [
                          {
                            "limits": null,
                            "requests": {
                              "storage": "2Gi"
                            }
                          }
                        ],
                        "selector": [],
                        "storage_class_name": "standard",
                        "volume_name": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJyZWFkIjo2MDAwMDAwMDAwMDAsInVwZGF0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.google_client_config.provider",
            "data.google_container_cluster.my_cluster"
          ]
        }
      ]
    }
  ]
}
